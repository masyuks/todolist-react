[{"F:\\react\\todolist-react\\client\\src\\index.js":"1","F:\\react\\todolist-react\\client\\src\\App.js":"2","F:\\react\\todolist-react\\client\\src\\reportWebVitals.js":"3","F:\\react\\todolist-react\\client\\src\\home.js":"4","F:\\react\\todolist-react\\client\\src\\Home.js":"5","F:\\react\\todolist-react\\client\\src\\Report.js":"6"},{"size":329,"mtime":1611737472036,"results":"7","hashOfConfig":"8"},{"size":696,"mtime":1611825310007,"results":"9","hashOfConfig":"8"},{"size":375,"mtime":1611720124974,"results":"10","hashOfConfig":"8"},{"size":965,"mtime":1611720780674,"results":"11","hashOfConfig":"8"},{"size":5095,"mtime":1611738045571,"results":"12","hashOfConfig":"8"},{"size":6076,"mtime":1611824937169,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1y2e552",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"F:\\react\\todolist-react\\client\\src\\index.js",[],["29","30"],"F:\\react\\todolist-react\\client\\src\\App.js",[],"F:\\react\\todolist-react\\client\\src\\reportWebVitals.js",[],"F:\\react\\todolist-react\\client\\src\\home.js",[],"F:\\react\\todolist-react\\client\\src\\Home.js",["31"],"import React, { useState, useEffect } from \"react\";\r\nimport './style.css';\r\nimport Axios from 'axios';\r\n\r\nfunction Home() {\r\n  const [isi, setIsi] = useState('');\r\n  const [status, setStatus] = useState('belum')\r\n  const [nama, setNama] = useState('');\r\n  \r\n  const [todoList, setTodoList] = useState([]);\r\n  const [userList, setUserList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/api/get/user\").then((response) => {\r\n      setUserList(response.data)\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    Axios.get(`http://localhost:3001/api/get/todolist`).then((response) => {\r\n      setTodoList(response.data)\r\n    });\r\n  }, []);\r\n\r\n\r\n  const addTodo = (id_user) => {\r\n    Axios.post(\"http://localhost:3001/api/insert/todolist\", {\r\n      isi: isi,\r\n      status: status,\r\n      id_user: id_user,\r\n    });\r\n\r\n    setTodoList([\r\n      ...todoList,\r\n      { isi: isi, status: status, id_user: id_user},\r\n    ]);\r\n  };\r\n\r\n  const addUser = () => {\r\n    Axios.post(\"http://localhost:3001/api/insert/user\", {\r\n      nama: nama,\r\n    });\r\n\r\n    setUserList([\r\n      ...userList,\r\n      {nama: nama},\r\n    ]);\r\n  };\r\n\r\n  const deleteTodo = (idTodo) => {\r\n    Axios.delete(`http://localhost:3001/api/delete/todolist/${idTodo}`);\r\n  };\r\n\r\n  const deleteUser = (id_user) => {\r\n    Axios.delete(`http://localhost:3001/api/delete/user/${id_user}`);\r\n  };\r\n\r\n  const updateTodo = (idTodo, status) => {\r\n    Axios.put(\"http://localhost:3001/api/update/todolist\", {\r\n      id: idTodo,\r\n      status: status,\r\n    });\r\n  };\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <br></br>\r\n      <h1 id=\"center\"> TO DO LIST </h1> \r\n      <div className=\"card\" id=\"set\">\r\n        <ul class=\"list-group list-group-flush\">\r\n          <li class=\"list-group-item\">\r\n            <br></br>\r\n            <input className=\"form-control\" type=\"text\" name=\"nama\" placeholder=\"Tambah User...\" onChange={(e) => {\r\n              setNama(e.target.value)\r\n            }} />\r\n            <br></br>\r\n            <center>\r\n              <a href=\"/\"><button className=\"btn btn-primary\" onClick={addUser}>New User</button></a>\r\n            </center>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      \r\n      <div className=\"row\">\r\n        {userList.map((user) => {\r\n          return (\r\n            <div class=\"col-sm-4\">\r\n            <div className=\"card\" id=\"todo\">\r\n              <ul class=\"list-group list-group-flush\">\r\n                <li class=\"list-group-item\">\r\n                  <div class=\"row\">\r\n                    <div class=\"col-6 col-md-4\"></div>\r\n                    <div class=\"col-6 col-md-4\" id=\"capital\"><center><b>{user.nama}</b></center></div>\r\n                    <div class=\"col-6 col-md-4\">\r\n                      <div class=\"row\">\r\n                        <div class=\"col-sm\"></div>\r\n                        <div class=\"col-sm\"></div>\r\n                        <div class=\"col-sm\">\r\n                          <a href=\"/\">\r\n                            <button className=\"btn btn-primary\" onClick={() => {deleteUser(user.id_user)}}>x</button>\r\n                          </a>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </li>\r\n                <input type=\"hidden\" name=\"id_user\" id=\"id_user\" value={user.id_user} />\r\n                {todoList.filter(todo => todo.id_user === user.id_user).map((filterTodo) => {\r\n                return (\r\n                <li class=\"list-group-item\">\r\n                  <div class=\"row\">\r\n                    <div class=\"col-sm-2\">\r\n                      <a href=\"/\">\r\n                        <button className=\"btn btn-primary\" onClick={() => {deleteTodo(filterTodo.id)}}>x</button>\r\n                      </a>\r\n                    </div>\r\n                    <div class=\"col-sm-10\">\r\n                    {filterTodo.status === 'belum'\r\n                      ? <a href=\"/\" onClick={() => {updateTodo(filterTodo.id, 'sudah')}} id=\"href\">{filterTodo.isi}</a>\r\n                      : <a href=\"/\" onClick={() => {updateTodo(filterTodo.id, 'belum')}} id=\"href\"><s>{filterTodo.isi}</s></a>\r\n                    }\r\n                    </div>\r\n                  </div>\r\n                </li>\r\n                  );\r\n                })} \r\n                <li class=\"list-group-item\">\r\n                  <div class=\"row\">\r\n                    <div class=\"col-sm-8\">\r\n                      <input className=\"form-control\" type=\"text\" name=\"isi\" placeholder=\"Tambah To Do...\" onChange={(e) => {\r\n                        setIsi(e.target.value)\r\n                      }} />\r\n                    </div>\r\n                    <div class=\"col-sm-2\">\r\n                      <a href=\"/\">\r\n                        <button className=\"btn btn-primary\" onClick={() => {addTodo(user.id_user)}}>Tambah</button>\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          );\r\n        })}\r\n        </div>\r\n        <br></br>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n\r\n","F:\\react\\todolist-react\\client\\src\\Report.js",["32","33","34","35"],"import React, { useState, useEffect } from \"react\";\r\nimport './style.css';\r\nimport Axios from 'axios';\r\nimport { Button } from 'react-bootstrap';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nfunction Report() {\r\n  const [show, setShow] = useState(false);\r\n  const [showTambah, setShowTambah] = useState(false);\r\n  const [tanggal, setTanggal] = useState('');\r\n  const [id_laporan, setidLaporan] = useState('');\r\n  const [chat_masuk, setChatMasuk] = useState('');\r\n  const [chat_closing, setChatClosing] = useState('');\r\n  const [id_user, setIdUser] = useState('');\r\n  // const handleClose = () => setShow(false);\r\n  const handleClose2 = () => setShowTambah(false);\r\n  // let Open = () => setShow(true);\r\n  const ModalTambah = () => setShowTambah(true);\r\n  \r\n  const [reportList, setReportList] = useState([]);\r\n  const [reportById, setReportById] = useState([]);\r\n  const [userList, setUserList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/api/get/user\").then((response) => {\r\n      setUserList(response.data)\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:3001/api/get/laporanChat\").then((response) => {\r\n      setReportList(response.data)\r\n    });\r\n  }, []);\r\n\r\n  useEffect((id_laporan) => {\r\n    Axios.get(`http://localhost:3001/api/getbyid/laporanChat/${id_laporan}`).then((response) => {\r\n      setReportById(response.data)\r\n    });\r\n  }, []);\r\n  \r\n  const addLaporanChat = () => {\r\n    Axios.post(\"http://localhost:3001/api/insert/laporanChat\", {\r\n      tanggal: tanggal,\r\n      chat_masuk: chat_masuk,\r\n      chat_closing:chat_closing,\r\n      id_user: id_user,\r\n    })\r\n    window.location.reload(false);\r\n  };\r\n\r\n  const deleteReport = (id_laporan) => {\r\n    Axios.delete(`http://localhost:3001/api/delete/laporanChat/${id_laporan}`);\r\n    window.location.reload(false);\r\n  };\r\n\r\n  const updateReport = (id_laporan, chat_masuk, chat_closing) => {\r\n    Axios.put(\"http://localhost:3001/api/update/laporanChat\", {\r\n      id_laporan: id_laporan,\r\n      chat_masuk: chat_masuk,\r\n      chat_closing: chat_closing,\r\n    });\r\n    window.location.reload(false);\r\n  };\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <br></br><br></br>\r\n      <h1 id=\"center\"> <b>Laporan Chat</b> </h1> \r\n      <div className=\"container\">\r\n      <div className=\"float-right m-4\">\r\n      <button className=\"btn btn-primary\" onClick={ModalTambah}>tambah</button>\r\n      </div> \r\n    <table className=\"table table-bordered bg-white\">\r\n    <thead>\r\n      <tr>\r\n        <th>Nama</th>\r\n        <th>Tanggal</th>\r\n        <th>Chat Masuk</th>\r\n        <th>Chat Closing</th>\r\n        <th>Action</th>\r\n      </tr>\r\n    </thead>\r\n    <tfoot>\r\n    <tr>\r\n        <th>Nama</th>\r\n        <th>Tanggal</th>\r\n        <th>Chat Masuk</th>\r\n        <th>Chat Closing</th>\r\n        <th>Action</th>\r\n      </tr>\r\n    </tfoot>\r\n    <tbody>\r\n    {reportList.map((report) => {\r\n      return(\r\n        // {setChatMasuk(report.chat_masuk);}\r\n        // {setChatClosing(report.chat_closing);}\r\n        <tr>\r\n          <input className=\"form-control\" type=\"hidden\" name=\"id_laporan\" placeholder=\"\" onChange={(e) => {\r\n              setidLaporan(e.target.value) }} defaultValue={report.id_laporan}/>\r\n        <td>{report.nama}</td>\r\n        <td>{report.tanggal}</td>\r\n        <td>\r\n        <input className=\"form-control\" type=\"number\" name=\"chat_masuk\" placeholder=\"0\" onChange={(e) => {\r\n              setChatMasuk(e.target.value) }} defaultValue={report.chat_masuk}/>\r\n        </td>\r\n        <td>\r\n        <input className=\"form-control\" type=\"number\" name=\"chat_closing\" placeholder=\"0\" onChange={(e) => {\r\n              setChatClosing(e.target.value) }} defaultValue={report.chat_closing}/>\r\n        </td>\r\n        <td width=\"150\">\r\n        {/* {chat_masuk === ''\r\n          ? <a href=\"/\" onClick={() => {updateTodo(filterTodo.id, 'sudah')}} id=\"href\">{filterTodo.isi}</a>\r\n          : <a href=\"/\" onClick={() => {updateTodo(filterTodo.id, 'belum')}} id=\"href\"><s>{filterTodo.isi}</s></a>\r\n        } */}\r\n          <button className=\"btn btn-primary m-1\" onClick={() => {updateReport(report.id_laporan, chat_masuk, chat_closing)}}>update</button>\r\n          <button className=\"btn btn-primary m-1\" onClick={() => {deleteReport(report.id_laporan)}}>x</button>\r\n        </td>\r\n      </tr>\r\n      )\r\n       })}\r\n    </tbody>\r\n  </table>\r\n</div>   \r\n      <Modal show={showTambah} onHide={handleClose2}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Tambah</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        <label>Nama</label>   \r\n        <select name=\"id_user\" className=\"form-control\" onChange={(e) => {setIdUser(e.target.value)}}>\r\n        {userList.map((user) => {\r\n          return (\r\n            <option value={user.id_user} >{user.nama}</option>          \r\n            );\r\n        })} \r\n        </select>   \r\n\r\n            <div class=\"form-group\">\r\n              <label>Tanggal</label>\r\n            <input className=\"form-control\" type=\"date\" name=\"tanggal\" placeholder=\"Tanggal...\" onChange={(e) => {\r\n              setTanggal(e.target.value)\r\n            }} />\r\n            </div>\r\n              <div class=\"form-group\">\r\n                <label>Chat Masuk</label>\r\n            <input className=\"form-control\" type=\"number\" name=\"chat_masuk\" placeholder=\"Chat Masuk...\" onChange={(e) => {\r\n              setChatMasuk(e.target.value)\r\n            }}/>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label>Chat CLosing</label>\r\n            <input className=\"form-control\" type=\"number\" name=\"chat_closing\" placeholder=\"Chat Closing...\" onChange={(e) => {\r\n              setChatClosing(e.target.value)\r\n            }} />\r\n            </div>\r\n         \r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose2}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={addLaporanChat}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\nexport default Report;",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":7,"column":18,"nodeType":"42","messageId":"43","endLine":7,"endColumn":27},{"ruleId":"40","severity":1,"message":"44","line":7,"column":10,"nodeType":"42","messageId":"43","endLine":7,"endColumn":14},{"ruleId":"40","severity":1,"message":"45","line":7,"column":16,"nodeType":"42","messageId":"43","endLine":7,"endColumn":23},{"ruleId":"40","severity":1,"message":"46","line":10,"column":10,"nodeType":"42","messageId":"43","endLine":10,"endColumn":20},{"ruleId":"40","severity":1,"message":"47","line":20,"column":10,"nodeType":"42","messageId":"43","endLine":20,"endColumn":20},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'setStatus' is assigned a value but never used.","Identifier","unusedVar","'show' is assigned a value but never used.","'setShow' is assigned a value but never used.","'id_laporan' is assigned a value but never used.","'reportById' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]